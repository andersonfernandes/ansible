# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import color as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.parsecolor(none_type_0)


def test_case_1():
    complex_0 = -3611.2267 + 789.4j
    var_0 = module_0.stringc(complex_0, complex_0)
    assert var_0 == (-3611.2267 + 789.4j)
    assert module_0.ANSIBLE_COLOR is False


def test_case_2():
    float_0 = -1029.119957
    var_0 = module_0.colorize(float_0, float_0, float_0)
    assert var_0 == "-1029.119957=-1029.119957"
    assert module_0.ANSIBLE_COLOR is False


def test_case_3():
    none_type_0 = None
    var_0 = module_0.hostcolor(none_type_0, none_type_0, none_type_0)
    assert var_0 == "None                      "
    assert module_0.ANSIBLE_COLOR is False


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "x/]X[m"
    module_0.parsecolor(str_0)


def test_case_5():
    bool_0 = False
    var_0 = module_0.colorize(bool_0, bool_0, bool_0)
    assert var_0 == "False=False"
    assert module_0.ANSIBLE_COLOR is False
