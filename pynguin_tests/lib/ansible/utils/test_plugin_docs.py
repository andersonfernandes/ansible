# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import yaml.resolver as module_0
import plugin_docs as module_1
import re as module_2
import enum as module_3
import ansible.errors as module_4


@pytest.mark.xfail(strict=True)
def test_case_0():
    var_0 = module_0.BaseResolver()
    module_1.add_collection_to_versions_and_dates(var_0, var_0, var_0, var_0)


def test_case_1():
    var_0 = module_2.purge()
    var_1 = module_1.add_collection_to_versions_and_dates(var_0, var_0, var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_1.get_docstring(none_type_0, none_type_0, ignore_errors=none_type_0)


def test_case_3():
    none_type_0 = None
    var_0 = module_1.get_versioned_doclink(none_type_0)
    assert var_0 == "https://docs.ansible.com/ansible-core/devel/None"


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -2954
    module_1.get_plugin_docs(int_0, int_0, int_0, int_0, int_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.remove_current_collection_from_versions_and_dates(
        tuple_0, tuple_0, tuple_0
    )


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -2967
    module_1.add_collection_to_versions_and_dates(int_0, int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "?H4uhO>qZj=B1\n\r"
    module_1.get_docstring(str_0, str_0, str_0, plugin_type=str_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    module_1.get_docstring(
        bool_0, bool_0, ignore_errors=bool_0, collection_name=bool_0, is_module=bool_0
    )


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "?kRH4uhO>qZj=B1\n\r"
    module_1.add_collection_to_versions_and_dates(str_0, str_0, str_0)


def test_case_10():
    enum_dict_0 = module_3._EnumDict()
    var_0 = module_1.add_fragments(enum_dict_0, enum_dict_0, enum_dict_0)


def test_case_11():
    enum_dict_0 = module_3._EnumDict()
    var_0 = module_1.merge_fragment(enum_dict_0, enum_dict_0)


def test_case_12():
    ansible_plugin_error_0 = module_4.AnsiblePluginError()
    dict_0 = {ansible_plugin_error_0: ansible_plugin_error_0}
    var_0 = module_1.remove_current_collection_from_versions_and_dates(
        dict_0, dict_0, dict_0
    )


@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = "/iU|l-*?o."
    none_type_0 = None
    var_0 = module_1.get_versioned_doclink(str_0)
    assert var_0 == "https://docs.ansible.com/ansible-core/devel/iU|l-*?o."
    module_1.add_collection_to_versions_and_dates(str_0, none_type_0, none_type_0)


def test_case_14():
    ansible_plugin_error_0 = module_4.AnsiblePluginError()
    dict_0 = {ansible_plugin_error_0: ansible_plugin_error_0}
    with pytest.raises(Exception):
        module_1.merge_fragment(dict_0, dict_0)


def test_case_15():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    regex_flag_0 = module_2.RegexFlag.DEBUG
    var_0 = module_1.add_collection_to_versions_and_dates(
        dict_0, regex_flag_0, dict_0, dict_0
    )


@pytest.mark.xfail(strict=True)
def test_case_16():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    var_0 = module_1.remove_current_collection_from_versions_and_dates(
        none_type_0, dict_0, dict_0
    )
    enum_dict_0 = module_3._EnumDict()
    var_1 = module_1.add_fragments(enum_dict_0, dict_0, none_type_0)
    var_2 = module_1.get_versioned_doclink(var_0)
    assert var_2 == "https://docs.ansible.com/ansible-core/devel/None"
    module_1.merge_fragment(enum_dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_17():
    str_0 = ".yml"
    var_0 = module_1.get_docstring(str_0, str_0, ignore_errors=str_0)
    var_0.verbose(str_0, caplevel=str_0)
