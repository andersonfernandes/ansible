# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import plugin_docs_typed as module_0
import ansible.utils.fqcn as module_1
import ansible.module_utils.common.text.converters as module_2
import re as module_3


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.add_collection_to_versions_and_dates(bool_0, bool_0, bool_0)


def test_case_1():
    bool_0 = False
    none_type_0 = module_0.add_collection_to_versions_and_dates(bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "fZ#A"
    module_0.get_docstring(str_0, str_0)


def test_case_3():
    str_0 = "H/Y\t)ojhz#5<KF"
    str_1 = module_0.get_versioned_doclink(str_0)
    assert str_1 == "https://docs.ansible.com/ansible-core/devel/H/Y\t)ojhz#5<KF"


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_0.merge_fragment(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.remove_current_collection_from_versions_and_dates(
        none_type_0, none_type_0, none_type_0
    )


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = '{vRL97QY-"m/i4]-ML0*'
    module_0.get_docstring(str_0, str_0, plugin_type=str_0)


def test_case_7():
    str_0 = "/Y)ojhz#5< "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = module_0.remove_current_collection_from_versions_and_dates(
        dict_0, str_0, str_0
    )


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "\n'6D4z7<g1\r}[fAYo"
    module_0.add_collection_to_versions_and_dates(str_0, str_0, str_0, str_0)


def test_case_9():
    dict_0 = {}
    none_type_0 = module_0.add_fragments(dict_0, dict_0, dict_0)


def test_case_10():
    dict_0 = {}
    none_type_0 = module_0.merge_fragment(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = '\rvk~dN"0S#^4M'
    module_0.get_docstring(
        str_0, str_0, collection_name=str_0, is_module=str_0, plugin_type=str_0
    )


def test_case_12():
    str_0 = "/Y\t)ojhz#5<K F"
    str_1 = module_0.get_versioned_doclink(str_0)
    assert str_1 == "https://docs.ansible.com/ansible-core/devel/Y\t)ojhz#5<K F"


def test_case_13():
    str_0 = "/Y)ojhz#5< "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = module_0.remove_current_collection_from_versions_and_dates(
        dict_0, str_0, dict_0, str_0
    )


def test_case_14():
    dict_0 = {}
    str_0 = "meta/runtime.yml"
    none_type_0 = module_0.add_fragments(dict_0, dict_0, str_0)
    bool_0 = True
    dict_1 = {str_0: none_type_0, bool_0: none_type_0, none_type_0: str_0}
    with pytest.raises(Exception):
        module_0.merge_fragment(dict_1, dict_1)


def test_case_15():
    bool_0 = True
    none_type_0 = None
    str_0 = "meta/runtime.yml"
    tuple_0 = module_0.get_docstring(
        str_0, bool_0, bool_0, bool_0, none_type_0, none_type_0, none_type_0
    )


@pytest.mark.xfail(strict=True)
def test_case_16():
    dict_0 = {}
    str_0 = "kJ:,t_usJ\t;"
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    none_type_2 = module_0.remove_current_collection_from_versions_and_dates(
        none_type_1, str_0, bool_0
    )
    none_type_3 = module_0.add_collection_to_versions_and_dates(
        none_type_0, dict_0, bool_0
    )
    var_0 = module_1.add_internal_fqcns(str_0)
    str_1 = module_0.get_versioned_doclink(str_0)
    assert str_1 == "https://docs.ansible.com/ansible-core/devel/kJ:,t_usJ\t;"
    str_2 = "meta/runtime.yml"
    tuple_0 = module_0.get_docstring(
        str_2, bool_0, bool_0, bool_0, none_type_0, none_type_3, none_type_0
    )
    none_type_4 = module_0.add_fragments(dict_0, dict_0, str_1)
    bool_1 = True
    none_type_5 = module_0.add_collection_to_versions_and_dates(
        none_type_0, str_0, bool_1, bool_1
    )
    bool_2 = False
    none_type_6 = module_0.remove_current_collection_from_versions_and_dates(
        none_type_3, none_type_0, bool_2
    )
    dict_1 = {str_0: none_type_2, bool_0: none_type_0, none_type_6: str_1}
    bool_3 = False
    none_type_7 = module_0.remove_current_collection_from_versions_and_dates(
        dict_1, str_1, bool_3
    )
    var_1 = module_2.to_text(dict_1, none_type_4, tuple_0)
    assert (
        var_1
        == "{'kJ:,t_usJ\\t;': None, True: None, None: 'https://docs.ansible.com/ansible-core/devel/kJ:,t_usJ\\t;'}"
    )
    module_0.merge_fragment(var_1, dict_1)


def test_case_17():
    dict_0 = {}
    none_type_0 = module_0.merge_fragment(dict_0, dict_0)
    str_0 = ""
    bool_0 = True
    none_type_1 = None
    none_type_2 = module_0.remove_current_collection_from_versions_and_dates(
        str_0, str_0, bool_0
    )
    none_type_3 = module_0.add_collection_to_versions_and_dates(
        none_type_0, dict_0, bool_0
    )
    var_0 = module_3.purge()
    str_1 = module_0.get_versioned_doclink(str_0)
    assert str_1 == "https://docs.ansible.com/ansible-core/devel/"
    none_type_4 = module_0.add_fragments(dict_0, dict_0, str_1)
    none_type_5 = module_0.add_collection_to_versions_and_dates(
        none_type_1, str_0, bool_0, bool_0
    )
    bool_1 = False
    none_type_6 = module_0.remove_current_collection_from_versions_and_dates(
        none_type_3, none_type_1, bool_1
    )
    dict_1 = {
        none_type_4: none_type_3,
        str_0: none_type_2,
        bool_0: none_type_1,
        none_type_2: none_type_0,
        none_type_0: str_1,
        var_0: dict_0,
    }
    with pytest.raises(Exception):
        module_0.merge_fragment(dict_1, dict_1)
